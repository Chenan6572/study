define(function(require){
	var $ = require("jquery");
	var justep = require("$UI/system/lib/justep");
	require("$UI/zupu/js/date/datePicker");
	require("css!$UI/zupu/css/LCalendar").load();
	var calendar = new datePicker();
	calendar.init({
		'trigger' : '#start_date', /* 按钮选择器，用于触发弹出插件 */
		'type' : 'date',/* 模式：date日期；datetime日期时间；time时间；ym年月； */
		'minDate' : '1900-1-1',/* 最小日期 */
		'maxDate' : '2100-12-31',/* 最大日期 */
		'onSubmit' : function() {/* 确认时触发事件 */
			var theSelectData = calendar.value;
		},
		'onClose' : function() {/* 取消时触发事件 */
		}
	});
	var calendar = new datePicker();
	calendar.init({
		'trigger' : '#end_date', /* 按钮选择器，用于触发弹出插件 */
		'type' : 'date',/* 模式：date日期；datetime日期时间；time时间；ym年月； */
		'minDate' : '1900-1-1',/* 最小日期 */
		'maxDate' : '2100-12-31',/* 最大日期 */
		'onSubmit' : function() {/* 确认时触发事件 */
			var theSelectData = calendar.value;
		},
		'onClose' : function() {/* 取消时触发事件 */
		}
	});
	var Model = function(){
		this.callParent();
	};
	//添加工作经历
	Model.prototype.addwork = function(event){
		var id = localStorage.getItem("id");
		console.log(id);
		var loginName = localStorage.getItem("loginName");
		var company_name = document.getElementById("company_name").value;
		var related_depart = document.getElementById("related_depart").value;
		var position = document.getElementById("position").value;
		var start_date = document.getElementById("start_date").value;
		var end_date = document.getElementById("end_date").value;
		console.log("Token = "+localStorage.getItem('Token'));
		$.ajax({
			headers:{
				Authorization: "Bearer " + localStorage.getItem('Token'),
			},
			url: 'http://10.10.1.198:8088/YProject/api/add_work',
			type: 'POST',
			datatype: "json",
			data:{
				parentid:id,
				company_name:company_name,
				related_depart:related_depart,
				position:position,
				company_start_time:start_date,
				company_end_time:end_date
			},
			processData: false,
			cache: false,
			async: true,
			global: false,
			contentType: "application/json; charset=utf-8",
			success: function (res) {
				if (res.state==="200"){	
					justep.Util.hint(res.message, {
						type: 'danger'	
					});	
					// justep.Shell.showPage("main");				
				}else{
					justep.Util.hint(res.message, {
					type: 'danger'	
				});				
				}	
			},
			error: function (res) {
				justep.Util.hint(res.message, {
					type: 'danger'
				});
			}
		});
		return;
	}

	return Model;
});