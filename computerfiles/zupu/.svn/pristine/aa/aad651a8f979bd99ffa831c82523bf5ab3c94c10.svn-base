define(function(require){
	var $ = require("jquery");
	var justep = require("$UI/system/lib/justep");
	require("$UI/zupu/js/date/datePicker");
	require("css!$UI/zupu/css/LCalendar").load();
	//日期格式
	var calendar = new datePicker();
	calendar.init({
		'trigger' : '#birthdate', /* 按钮选择器，用于触发弹出插件 */
		'type' : 'date',/* 模式：date日期；datetime日期时间；time时间；ym年月； */
		'minDate' : '1900-1-1',/* 最小日期 */
		'maxDate' : '2100-12-31',/* 最大日期 */
		'onSubmit' : function() {/* 确认时触发事件 */
			var theSelectData = calendar.value;
		},
		'onClose' : function() {/* 取消时触发事件 */
		}
	});
	//日期格式
	var calendar = new datePicker();
	
	
	var Model = function(){
		this.callParent();
	};
	//图库选择图片
	var imgsdata =null;
	Model.prototype.getPicturesClick = function (event) {
		if (!navigator.camera) {
			return;
		}
		navigator.camera.getPicture(onSuccess, onFail, {
			mediaType: 0, //只选择图片
			quality: 80,
			allowEdit: true,
			targetWidth: 100,
			targetHeight: 100,
			destinationType: navigator.camera.DestinationType.DATA_URL,
			sourceType: navigator.camera.PictureSourceType.PHOTOLIBRARY
			//sourceType: navigator.camera.PictureSourceType.PhotoAlbum//在安卓中，这个参数会跳出拍照界面
		});
		function onSuccess(imageData) {
			var smallImage = document.getElementById("image1");
			smallImage.style.display = 'block';
			smallImage.src = "data:image/jpeg;base64," + imageData;
			//图片上传
			var $Blob = getBlobBydataURI(smallImage.src, 'image/jpeg');
			var formData = new FormData();
			formData.append("files", $Blob, "file_" + Date.parse(new Date()) + ".jpeg");
			$.ajax({
				headers: {
					Authorization: "Bearer " + localStorage.getItem('Token'),
				},
				url: 'http://10.10.1.232:8088/YProject/api/upload',
				data: formData,
				processData: false,
				cache: false,
				async: true,
				global: false,
				contentType: false,
				datatype: "json",
				type: 'POST',
				success: function (res) {
				imgsdata = res.data,
				console.log("图片路径 "+imgsdata);
				},					
				error: function (res) {					
					console.log(res);
					justep.Util.hint(res.message, {
						type: 'danger'
					});
				}
			});
			
		}
		function onFail(message) {
			alert('Failed because: ' + message);
		}
	};
	/** 
	 * 根据base64 内容 取得 bolb 
	 * 
	 */
	function getBlobBydataURI(dataURI, type) {

		var binary = atob(dataURI.split(',')[1]);
		var array = [];
		for (var i = 0; i < binary.length; i++) {
			array.push(binary.charCodeAt(i));
		}
		return new Blob([new Uint8Array(array)], {
			type: type
		});
	};

	return Model;
});